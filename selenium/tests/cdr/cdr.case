<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head profile="http://selenium-ide.openqa.org/profiles/test-case">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="selenium.base" href="" />
<title>cdr</title>
</head>
<body>
<table cellpadding="1" cellspacing="1" border="1">
<thead>
<tr><td rowspan="1" colspan="3">cdr</td></tr>
</thead><tbody>
<tr>
	<td>open</td>
	<td>/billing/callc/logout</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>login_username</td>
	<td>admin</td>
</tr>
<tr>
	<td>type</td>
	<td>login_psw</td>
	<td>admin1</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<!--set csv settings (bundle)-->
<tr>
	<td>open</td>
	<td>/billing/test/load_bundle_sql/?path=universal_bundles/csv_decimal_and_separator_settings</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td> # bundle loaded</td>
	<td></td>
</tr>
<!--===TEST to test whether an error will-->
<tr>
	<td>open</td>
	<td>/billing/cdr/import_csv</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Please upload file</td>
	<td></td>
</tr>
<tr>
	<td>assertElementPresent</td>
	<td>file</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>file</td>
	<td>/home/mor/selenium/files/csv/example_cdr.csv</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Please confirm Column Separator and Decimal Separator for CSV file</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>billsec_id</td>
	<td>label=Billsec</td>
</tr>
<tr>
	<td>select</td>
	<td>src_number_id</td>
	<td>label=Source</td>
</tr>
<tr>
	<td>select</td>
	<td>dst_id</td>
	<td>label=Destination</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertElementNotPresent</td>
	<td>conf</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Please select columns</td>
	<td></td>
</tr>
<!--import cdr-->
<tr>
	<td>open</td>
	<td>/billing/cdr/import_csv</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Please upload file</td>
	<td></td>
</tr>
<tr>
	<td>assertElementPresent</td>
	<td>file</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>file</td>
	<td>/home/mor/selenium/files/csv/example_cdr.csv</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Please confirm Column Separator and Decimal Separator for CSV file</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>calldate_id</td>
	<td>label=Date</td>
</tr>
<tr>
	<td>select</td>
	<td>billsec_id</td>
	<td>label=Billsec</td>
</tr>
<tr>
	<td>select</td>
	<td>src_number_id</td>
	<td>label=Source</td>
</tr>
<tr>
	<td>select</td>
	<td>dst_id</td>
	<td>label=Destination</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Columns assigned</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=conf</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>id=import_type_0</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>id=user</td>
	<td>label=Test User #1</td>
</tr>
<tr>
	<td>click</td>
	<td>css=option[value=&quot;2&quot;]</td>
	<td></td>
</tr>
<tr>
	<td>waitForElementPresent</td>
	<td>id=device_id</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>id=device_id</td>
	<td>label=Test Device #1</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>name=commit</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>name=commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Congratulations, successfully imported CSV file!</td>
	<td></td>
</tr>
<!--Ikeltas bundle (Optimizuota)-->
<tr>
	<td>open</td>
	<td>/billing/test/load_bundle_sql/?path=universal_bundles/csv_separator_and_decimal2</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td> # bundle loaded</td>
	<td></td>
</tr>
<!--~~~~~~~~~~~~~~~~~~-->
<tr>
	<td>open</td>
	<td>/billing/cdr/import_csv</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Please upload file</td>
	<td></td>
</tr>
<tr>
	<td>assertElementPresent</td>
	<td>file</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>file</td>
	<td>/home/mor/selenium/files/csv/example_cdr2.csv</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>name=commit</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>calldate_id</td>
	<td>label=2009-09-02 10:37:38</td>
</tr>
<tr>
	<td>select</td>
	<td>dst_id</td>
	<td>label=0037052058500</td>
</tr>
<tr>
	<td>select</td>
	<td>billsec_id</td>
	<td>label=106</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Columns assigned</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>//input[@name='commit' and @value='Confirm columns']</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Next step: Analysis</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>id=import_type_0</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>id=user</td>
	<td>label=Test User #1</td>
</tr>
<tr>
	<td>waitForElementPresent</td>
	<td>id=device_id</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>id=device_id</td>
	<td>label=Test User #1/127.0.1.2</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>name=commit</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Next step: Import CDR</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertText</td>
	<td>id=total_calls</td>
	<td>14</td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Congratulations, successfully imported CSV file!</td>
	<td></td>
</tr>
<!--...Errors while importing CDR-->
<!--......Step is out of the range-->
<tr>
	<td>open</td>
	<td>/billing/cdr/import_csv?step=8</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>Import from CSV</td>
	<td></td>
</tr>
<!--rerating-->
<tr>
	<td>open</td>
	<td>/billing/cdr/rerating?step=2&amp;user=9999</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>User was not found</td>
	<td></td>
</tr>
<tr>
	<td>open</td>
	<td>/billing/cdr/rerating?step=3&amp;user=9999</td>
	<td></td>
</tr>
<tr>
	<td>assertTextPresent</td>
	<td>User was not found</td>
	<td></td>
</tr>
<tr>
	<td>runScript</td>
	<td>javascript{this.browserbot.getCurrentWindow().document.getElementById('date_from_year').getElementsBySelector('option')[0].value = 2009}</td>
	<td></td>
</tr>
<tr>
	<td>runScript</td>
	<td>javascript{this.browserbot.getCurrentWindow().document.getElementById('date_from_year').getElementsBySelector('option')[0].text = 2009}</td>
	<td></td>
</tr>
<tr>
	<td>runScript</td>
	<td>javascript{this.browserbot.getCurrentWindow().document.getElementById('date_till_year').getElementsBySelector('option')[0].value = 2009}</td>
	<td></td>
</tr>
<tr>
	<td>runScript</td>
	<td>javascript{this.browserbot.getCurrentWindow().document.getElementById('date_till_year').getElementsBySelector('option')[0].text = 2009}</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>date_from_month</td>
	<td>label=January</td>
</tr>
<tr>
	<td>select</td>
	<td>date_from_day</td>
	<td>label=1</td>
</tr>
<tr>
	<td>select</td>
	<td>date_from_year</td>
	<td>label=2009</td>
</tr>
<tr>
	<td>select</td>
	<td>date_till_year</td>
	<td>label=2009</td>
</tr>
<tr>
	<td>select</td>
	<td>date_till_day</td>
	<td>label=31</td>
</tr>
<tr>
	<td>select</td>
	<td>date_till_month</td>
	<td>label=December</td>
</tr>
<tr>
	<td>runScript</td>
	<td>javascript{this.browserbot.getCurrentWindow().document.getElementById('s_user_id').value='2'}</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=s_user</td>
	<td>Test User #1</td>
</tr>
<tr>
	<td>waitForCondition</td>
	<td>selenium.browserbot.getCurrentWindow().jQuery.active == 0</td>
	<td>30000</td>
</tr>
<tr>
	<td>assertTextNotPresent</td>
	<td>TESTING MODE </td>
	<td></td>
</tr>
<tr>
	<td>assertElementNotPresent</td>
	<td>name=test_tariff_id</td>
	<td></td>
</tr>
<tr>
	<td>assertElementNotPresent</td>
	<td>id=submit_test</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>commit</td>
	<td></td>
</tr>
<tr>
	<td>assertConfirmation</td>
	<td>Are you sure you want to rerate CDRs for Test User #1?</td>
	<td></td>
</tr>
<tr>
	<td>assertText</td>
	<td>id=status</td>
	<td>Background Task for Rerating successfully created</td>
</tr>
<tr>
	<td>assertText</td>
	<td>link=Test User #1</td>
	<td>Test User #1</td>
</tr>
<tr>
	<td>assertText</td>
	<td>id=task_2</td>
	<td>Rerating</td>
</tr>
</tbody></table>
</body>
</html>
