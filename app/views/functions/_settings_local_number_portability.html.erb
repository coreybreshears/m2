<div class="row">
  <div class="col col-bigger">
    <div class="input-row">
      <div class="label-col">
        <%= label_tag 'us_jurisdictional_routing_module_enabled', _('Use_Local_Number_Portability') %>
      </div>
      <% use_lnp = Confline.get_value('us_jurisdictional_routing_module_enabled', 0, 0).to_i %>
      <div class="input-col">
        <div class="radio-container">
          <div class="radio-row">
            <%= radio_button_tag('us_jurisdictional_routing_module_enabled', '0', (use_lnp == 0)) + _('_No') %>
          </div>
          <div class="radio-row">
            <%= radio_button_tag('us_jurisdictional_routing_module_enabled', '1', (use_lnp == 1)) + _('_Yes') %>
          </div>
        </div>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_server_ip', _('Server_IP') %>
      </div>
      <div class="input-col">
        <%= text_field_tag('lnp_server_ip', Confline.get_value('LNP_Server_IP'), class: 'input lnp_server_ip') %>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_port', _('Port') %>
      </div>
      <div class="input-col">
        <%= text_field_tag('lnp_port', Confline.get_value('LNP_Port'), class: 'input lnp_port', maxlength: '5') %>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_username', _('Username') %>
      </div>
      <div class="input-col">
        <%= text_field_tag('lnp_username', Confline.get_value('LNP_Username'), class: 'input lnp_username') %>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_password', _('Password') %>
      </div>
      <div class="input-col">
        <%= password_field_tag('lnp_password', Confline.get_value('LNP_Password'), class: 'input lnp_password') %>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_db_name', _('DB_Name') %>
      </div>
      <div class="input-col">
        <%= text_field_tag('lnp_db_name', Confline.get_value('LNP_DB_Name'), class: 'input lnp_db_name') %>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_table_name', _('Table_Name') %>
      </div>
      <div class="input-col">
        <%= text_field_tag('lnp_table_name', Confline.get_value('LNP_Table_Name'), class: 'input lnp_table_name') %>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_search_field', _('Search_Field') %>
      </div>
      <div class="input-col">
        <%= text_field_tag('lnp_search_field', Confline.get_value('LNP_Search_Field'), class: 'input lnp_search_field') %>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_result_field', _('Result_Field') %>
      </div>
      <div class="input-col">
        <%= text_field_tag('lnp_result_field', Confline.get_value('LNP_Result_Field'), class: 'input lnp_result_field') %>
      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
        <%= label_tag 'lnp_supported_prefixes', _('Supported_Prefixes') %>
      </div>
      <% supported_prefixes = Confline.get_value('LNP_Supported_Prefixes', 0, 0).to_i %>
      <div class="input-col">
        <div class="radio-container">
            <%= radio_button_tag('lnp_supported_prefixes', '0', (supported_prefixes == 0)) + _('All_Prefixes') %>
            <br><br>
            <%= radio_button_tag('lnp_supported_prefixes', '1', (supported_prefixes == 1)) + _('Only_these_prefixes') %>
        </div>
        <div class="lnp_prefixes">
          <br>
          <div class="lnp_prefix_status lnp_message_box"></div>
          <div class="table-box">
            <div class="table-holder lnp_prefix_table">
              <table class="table-with-edit-and-delete">
                <thead>
                  <tr>
                    <th><%= _('Prefix') %></th>
                    <th></th>
                  </tr>
                </thead>
                <tbody class="lnp_prefix_body">
                <% lnp_prefixes.each_with_index do |prefix, index| %>
                  <tr>
                    <td class="lnp_prefix_table_prefix">
                      <%= prefix.prefix %>
                    </td>
                    <td>
                      <%= link_to _('DELETE'), '#', id: "lnp_del_#{prefix.id}", class: 'lnp_delete' %>
                    </td>
                  </tr>
                <% end %>
                </tbody>
              </table>
            </div>
          </div>
          </br>
          <div class="lnp_prefix">
            <%= text_field_tag('new_lnp_prefix', '', class: 'input new_lnp_prefix') %>&nbsp;
            <%= link_to _('Add_to_List'), '#', class: 'search-form-button search-button-link new_lnp_prefix_link' %>
          </div>
        </div>

      </div>
    </div>

    <div class="input-row lnp_setting">
      <div class="label-col">
      </div>
      <div class="input-col">
        </br>
        <div class="lnp_db_check_status lnp_message_box"></div>
        </br>
        <%= link_to _('Test_DB_Connection'), '#', class: 'search-form-button search-button-link lnp_test_db' %>
      </div>
    </div>

  </div>
</div>
<script type="text/javascript">

    jQuery(document).ready(function($){
      function lnpRequest(link, data = {}, updateTable = true){
          $.ajax({
              url: Web_Dir + '/functions/' + link,
              data: data,
              async: true,
              success: function(response) {
                  if (updateTable){
                    console.log(response);
                    updateLnpPrefixTable(response);
                  }else{
                    console.log("YARAA");
                    updateLnpMsgBox(response);
                    lnpRequest('get_lnp_prefixes');
                  }
              }
          });
      }


      function check_lnp_db_con(link){
          $.ajax({
              url: Web_Dir + '/functions/' + link,
              data: data,
              async: true,
              success: function(response) {
                  $('.lnp_db_check_status').html('');
                  $('.lnp_db_check_status').css('background', response['color']);
                  $('.lnp_db_check_status').css('background', response['color']);
                  $('.lnp_db_check_status').html("<%= _('DB_connection_status')%>: " + response['msg'])
              }
          });
      }

      function updateLnpPrefixTable(prefixes){
        // clear prefixes
        $('.lnp_prefix_body').html('');
        var new_prefixes = '';
        prefixes.forEach(function(prefix, index){
          var delete_link = '<a href="#" id="lnp_del_' + prefix['id'] + '" class="lnp_delete">DELETE</a>';
          var even_class = index % 2 != 0 ? 'class="even"' : '';
          new_prefixes += '<tr ' + even_class + ' ><td class="lnp_prefix_table_prefix">' + prefix['prefix'] + '</td><td>' + delete_link + '</td></tr>';
        });
        $('.lnp_prefix_body').html(new_prefixes);
      }

      function updateLnpMsgBox(response){
        $('.lnp_prefix_status').html('');
        var bgColor = '#c9efb9';
        if (response['status'] == 0){
          $('.lnp_prefix_status').html(response['msg']);
        }else{
          $('.lnp_prefix_status').html(response['msg'] + ':</br>*' + response['errors']['prefix']);
          bgColor = '#FFD4D4';
        }

        $('.lnp_prefix_status').css('background', bgColor);
      }

      function deleteLnpPrefix(prefix_id){
        processingLnpPrefix();
        lnpRequest('destroy_lnp_prefix', {id: prefix_id}, false);
      }

      function addLnpPrefix(){
        processingLnpPrefix();
        lnpRequest('create_lnp_prefix', {prefix: $('.new_lnp_prefix').val() }, false);
      }

      $('.new_lnp_prefix_link').click(function(e){
        addLnpPrefix();
        e.preventDefault();
      });

      $('.new_lnp_prefix').on('keypress', function(e){
        if(e.which == 13){
          e.preventDefault();
          $('.new_lnp_prefix_link').trigger('click');
        }
      });

      $(document).on('click','.lnp_delete', function(e){
        if (confirm('Are you sure?' )) deleteLnpPrefix($(this).attr('id').split('lnp_del_')[1]);
        e.preventDefault();
      });

      $('.lnp_test_db').click(function(e){
        data = {
          host: $('.lnp_server_ip').val(),
          port: $('.lnp_port').val(),
          username: $('.lnp_username').val(),
          mnp_password: $('.lnp_password').val(),
          db_name: $('.lnp_db_name').val(),
          table_name: $('.lnp_table_name').val(),
          search_field: $('.lnp_search_field').val(),
          result_field: $('.lnp_result_field').val()
        }
        $('.lnp_db_check_status').css('background', 'none');
        $('.lnp_db_check_status').html("<%= _('DB_connection_status')%>: <%= _('Processing') %> ");
        check_lnp_db_con('test_mnp_db_connection');
        e.preventDefault();
      });

      function processingLnpPrefix(){
        $('.lnp_prefix_status').css('background', 'none');
        $('.lnp_prefix_status').html("<%= _('Processing') %>");
      }

      $('#us_jurisdictional_routing_module_enabled_1').prop('checked') ? $('.lnp_setting').show() : $('.lnp_setting').hide();
      $('#us_jurisdictional_routing_module_enabled_0').on('change', function(){ $('.lnp_setting').hide() });

      $('#us_jurisdictional_routing_module_enabled_1').on('change', function(){ $('.lnp_setting').show() });

    });


</script>
