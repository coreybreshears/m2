<% (defined?(no_checkboxes) and no_checkboxes == true) ? show = false : show = true -%>
<div id="search_header">
  <%= form_tag :controller => params[:controller], :action => params[:action] do %>
      <%= hidden_field_tag 'search_on', 1 %>
      <%= hidden_field_tag 'search_pressed', true %>
      <table style="width: 100%">
        <tr>
          <td>
            <table class="bordered">
              <tr>
                <td valign="top">
                  <table>
                    <tr>
                      <td colspan="2" class="bottom_border"><b><%= _('filter_by') %>:</b></td>
                    </tr>
                    <tr>
                      <td colspan="2" height="10"></td>
                    </tr>
                    <tr>
                      <td valign="top" colspan="2">
                        <table class="simple">
                          <tr>
                            <td style="min-width: 50px" align="right"><%= _('From') %>:</td>
                            <td colspan="3"><%= select_datetime(Time.mktime(session[:year_from], session[:month_from], session[:day_from], session[:hour_from], 00, 00), :end_year => Date.today.year+1, :prefix => "date_from", :use_month_numbers => false, :include_seconds => true) %></td>
                          </tr>
                          <tr>
                            <td align="right"><%= _('Till') %>:</td>
                            <td colspan="3" nowrap><%= select_datetime(Time.mktime(session[:year_till], session[:month_till], session[:day_till], session[:hour_till], 59, 59), :end_year => Date.today.year+1, :prefix => "date_till", :use_month_numbers => false, :include_seconds => true) %></td>
                          </tr>
                          <tr>
                            <td align="right"><%= _('Originator') %>:</td>
                            <td>
                              <%= render 'shared/live_search_field',
                                  object: options[:originator],
                                  object_id: options[:originator_id],
                                  object_name: 'Originator',
                                  style: {class: 'input', css: 'width:143px;'},
                                  action_url: {
                                    controller: :users,
                                    action: :get_users_map,
                                    options: {
                                      users_to_get: 'originators'
                                    }
                                  }
                              %>
                            </td>
                            <td align="right"><%= _('Origination_point') %>:</td>
                            <td>
                              <span id="op_device_list_span">
                                <%= select_tag('s_op_device', options_for_select([[_('All'), '']] + (options[:op_devices].try(:map) { |dev| [nice_device(dev), dev.id] } || []), options[:s_op_device]), style: 'width:146px;') %>
                              </span>
                            </td>
                          </tr>
                          <tr>
                            <td align="right"><%= _('Terminator') %>:</td>
                            <td>
                              <%=
                                render 'shared/live_search_field',
                                object: options[:terminator],
                                object_id: options[:terminator_id],
                                object_name: 'Terminator',
                                style: {class: 'input', css: 'width:143px;'},
                                action_url: {
                                  controller: :users,
                                  action: :get_users_map,
                                  options: {
                                    users_to_get: 'terminators'
                                  }
                                }
                              %>
                            </td>
                            <td align="right"><%= _('Termination_point') %>:</td>
                            <td>
                              <span id="tp_device_list_span">
                                <%= select_tag('s_tp_device', options_for_select([[_('All'), '']] + (options[:tp_devices].try(:map) { |dev| [nice_device(dev), dev.id] } || []), options[:s_tp_device]), style: 'width:146px;') %>
                              </span>
                            </td>
                          </tr>
                          <tr>
                            <td align="right" nowrap><%= _('CallerID') %>:</td>
                            <td>
                              <%= text_field_tag('src', options[:src], class: 'input', size: '20', style: 'width:143px;') %>
                            </td>
                            <td align="right"><%= _('Destination') %>:</td>
                            <td><%= text_field_tag('dst', options[:dst], class: 'input', size: '20', style: 'width:143px;') %></td>
                          </tr>
                          <tr>
                            <td align="right" nowrap><%= _("Duration") %>:</td>
                            <td nowrap="true" ><%= text_field_tag("s_duration", options[:s_duration], class: 'input', style: "width: 50px") %><span> s</span></td>
                            <td align="right"><%= _('Destination_Group') %>:</td>
                            <td><%= text_field_tag('dst_group', options[:dst_group], class: 'input', style: 'width:143px;') %></td>
                          </tr>
                          <% if current_user.is_admin? %>
                            <tr>
                              <td align="right" nowrap><%= _("Manager") %>:</td>
                              <td nowrap="true" >
                                <span id="manager_id">
                                  <%= select_tag('s_manager', options_for_select([[_('All'), '']] + User.responsible_acc.collect { |accountant| [nice_user(accountant), accountant.id] }, options[:s_manager]), style: 'width:146px;') %>
                                </span>
                              </td>
                              <td></td>
                              <td></td>
                            </tr>
                          <% end %>
                        </table>
                      </td>
                    </tr>
                  </table>
                </td>
                <td valign="top">
                  <table width="100%">
                    <tr>
                      <td colspan="2" class="bottom_border"><b><%= _('show_columns') %>:</b></td>
                    </tr>
                    <tr>
                      <td colspan="2" height="10"></td>
                    </tr>
                    <tr>
                      <td valign="top" colspan="2">
                        <table class="simple" width="100%">
                          <tr>
                            <td style="width:110px;min-width:110px;"></td>
                            <td style="border-bottom: 1px solid #000;width:90px;min-width:90px;" align="center"><b><%= _('Originator') %></b></td>
                            <td style="width:100px;min-width:100px;"></td>
                            <td style="border-bottom: 1px solid #000;width:90px;min-width:90px;" align="center"><b><%= _('Terminator') %></b></td>
                          </tr>
                          <tr>
                            <td align="right"><%= _('Price') + ' (' + _('Cost') + ')' %>:</td>
                            <td align="center"><%= check_box_tag('price_orig_show', '1', (options[:price_orig_show].to_i == 1), 'class' => 'input') %></td>
                            <td align="right"><%= _('Price') + ' (' + _('Revenue') + ')' %>:</td>
                            <td align="center"><%= check_box_tag('price_term_show', '1', (options[:price_term_show].to_i == 1), 'class' => 'input') %></td>
                          </tr>
                          <tr>
                            <td align="right" nowrap><%= _('Billed_Time') %>:</td>
                            <td align="center"><%= check_box_tag('billed_time_orig_show', '1', (options[:billed_time_orig_show].to_i == 1), 'class' => 'input') %></td>
                            <td align="right" nowrap><%= _('Billed_Time') %>:</td>
                            <td align="center"><%= check_box_tag('billed_time_term_show', '1', (options[:billed_time_term_show].to_i == 1), 'class' => 'input') %></td>
                          </tr>
                          <tr>
                            <td style="border-bottom: 1px solid #C0C0C0;" colspan="4"></td>
                          </tr>
                          <tr>
                            <td align="right"><%= _('Duration') %>:</td>
                            <td align="center"><%= check_box_tag('duration_show', '1', (options[:duration_show].to_i == 1), 'class' => 'input') %></td>
                            <td align="right"><%= _('ACD') %>:</td>
                            <td align="center"><%= check_box_tag('acd_show', '1', (options[:acd_show].to_i == 1), 'class' => 'input') %></td>
                          </tr>
                          <tr>
                            <td align="right" nowrap><%= _('Answered') %>:</td>
                            <td align="center"><%= check_box_tag('calls_answered_show', '1', (options[:calls_answered_show].to_i == 1), 'class' => 'input') %></td>
                            <td align="right"><%= _('ASR') %>:</td>
                            <td align="center"><%= check_box_tag('asr_show', '1', (options[:asr_show].to_i == 1), 'class' => 'input') %></td>
                          </tr>
                          <tr>
                            <td align="right"><%= _('Calls_Total') + ' (' + _('Attempts') + ')' %>:</td>
                            <td align="center"><%= check_box_tag('calls_total_show', '1', (options[:calls_total_show].to_i == 1), 'class' => 'input') %></td>
                            <td align="right"><%= _('Avg_PDD') %>:</td>
                            <td align="center"><%= check_box_tag('pdd_show', '1', (options[:pdd_show].to_i == 1), 'class' => 'input') %></td>
                          </tr>
                          <tr>
                            <td align="right"><%= _('Profit') %>:</td>
                            <td align="center"><%= check_box_tag('profit_show', '1', (options[:profit_show].to_i == 1), class: 'input') %></td>
                            <td align="right"><%= _('Profit') %> %:</td>
                            <td align="center"><%= check_box_tag('profit_percent_show', '1', (options[:profit_percent_show].to_i == 1), class: 'input') %></td>
                          </tr>
                        </table>
                      </td>
                    </tr>
                  </table>
                </td>
                <td valign="top" align="right" rowspan="2" style="padding:5px 5px 0 0;">
                  &nbsp;&nbsp;&nbsp;&nbsp;<%= link_to(b_cross + _('Clear_search'), :action => :list, :clean => 1) if searching or from or till %>
                </td>
              </tr>
              <tr>
                <td valign="top">
                  <table width="100%">
                    <tr>
                      <td colspan="2" class="bottom_border"><b><%= _('General') %>:</b></td>
                    </tr>
                    <tr>
                      <td colspan="2" height="10"></td>
                    </tr>
                    <tr>
                      <td valign="top" colspan="2">
                        <table class="simple">
                          <tr>
                            <td colspan="2" align="right">
                              <%= _('Use_Real_Billsec')%>:
                            </td>
                            <td>
                              <%= radio_button_tag 'use_real_billsec', 0, options[:use_real_billsec].to_i == 0 %>
                              <%= _('_No') %>
                              <%= radio_button_tag 'use_real_billsec', 1, options[:use_real_billsec].to_i == 1 %>
                              <%= _('_Yes') %>
                            </td>
                          </tr>
                          <tr>
                            <td colspan="2" align="right">
                              <%= _('from_user_perspective') %>:
                            </td>
                            <td style="width: 100px">
                              <%= radio_button_tag 'from_user_perspective', 0, options[:from_user_perspective].to_i == 0 %>
                              <%= _('_No') %>
                              <%= radio_button_tag 'from_user_perspective', 1, options[:from_user_perspective].to_i == 1 %>
                              <%= _('_Yes') %>
                            </td>
                          </tr>
                          <tr>
                            <td colspan='2' align='right'>
                              <%= _('Show_when_Answered_Calls') %> >=
                            </td>
                            <td>
                              <%= text_field_tag('answered_calls', (options[:answered_calls].blank? ? 1 : (is_number?(options[:answered_calls].to_s.strip) && options[:answered_calls].to_i >= 0 ? options[:answered_calls].to_i : 0)), 'class' => 'input_60') %>
                            </td>
                          </tr>

                        </table>
                      </td>
                    </tr>
                    <% if authorize_manager_permissions({controller: :aggregate_templates, action: :index, no_redirect_return: 1}) || !manager? %>
                    <tr class="templates_form">
                      <td colspan="2" class="bottom_border"><b><%= _('Templates') %>:</b></td>
                    </tr>
                    <tr class="templates_form">
                      <td colspan="2" height="10"></td>
                    </tr>
                     <tr class="templates_form">
                        <td colspan="2" class="request_notice"></td>
                    </tr>
                    <tr class="templates_form">
                      <td valign="top" colspan="2">
                        <table class="simple">
                          <tr>
                            <td colspan='2' align='right'><%= _('Use_Template') %>:</td>
                            <td>
                              <span id ="template_list_span">
                                <%= select_tag('template', options_for_search_template(-1), style: 'width:200px;') %>
                              </span>
                            </td>
                          </tr>
                          <tr>
                            <td colspan='2' align='right'><%= _('New_Template_name') %>:</td>
                            <td> <%= text_field_tag('template_name', options[:template_tag], class: 'input', size: '20', style: 'width:200px;') %></td>
                            <td><%= submit_tag(_('Save_Template'), type: 'button', onclick: 'createTemplate();') %> </td>
                          </tr>
                        </table>
                      </td>
                    </tr>
                    <% end %>
                  </table>
                </td>
                <td valign="top">
                  <table width="100%">
                    <tr>
                      <td colspan="2" class="bottom_border"><b><%= _('Group_by') %>:</b></td>
                    </tr>
                    <tr>
                      <td colspan="2" height="10"></td>
                    </tr>
                    <tr>
                      <td valign="top" colspan="2">
                        <table class="simple" width="100%">
                          <tr>
                            <td align="right" style="width:110px;min-width:110px;"><%= _('Originator') %>:</td>
                            <td align="center" style="width:90px;min-width:90px;">
                              <%= check_box_tag('group_by_originator', '1', options[:group_by_originator] ? options[:group_by_originator].to_i == 1 : 1,
                                  class: 'input', onclick: 'compete(this, "group_by_op");') %>
                            </td>
                            <td style="width:100px;min-width:100px;" align="right"><%= _('Origination_point') %>:</td>
                            <td align="center" style="width:90px;min-width:90px;">
                              <%= check_box_tag('group_by_op', '1', options[:group_by_op].to_i == 1,
                                  class: 'input', onclick: 'compete(this, "group_by_originator");') %>
                            </td>
                          </tr>
                          <tr>
                            <td align="right"><%= _('Terminator') %>:</td>
                            <td align="center">
                              <%= check_box_tag('group_by_terminator', '1', options[:group_by_terminator] ? options[:group_by_terminator].to_i == 1 : 1,
                                  class: 'input', onclick: 'compete(this, "group_by_tp");') %>
                            </td>
                            <td align="right"><%= _('Termination_point') %>:</td>
                            <td align="center">
                              <%= check_box_tag('group_by_tp', '1', options[:group_by_tp].to_i == 1,
                                  class: 'input', onclick: 'compete(this, "group_by_terminator");') %>
                            </td>
                          </tr>
                          <tr>
                            <td align="right" nowrap><%= _('Destination_Group') %>:</td>
                            <td align="center">
                              <%= check_box_tag('group_by_dst_group', '1', options[:group_by_dst_group] ? options[:group_by_dst_group].to_i == 1 : 1,
                                  class: 'input', onclick: 'compete(this, "group_by_dst");') %>
                            </td>
                            <td align="right"><%= "#{_('Destination')}/#{_('Prefix')}" %>:</td>
                            <td align="center">
                              <%= check_box_tag('group_by_dst', '1', options[:group_by_dst].to_i == 1,
                                  class: 'input', onclick: 'compete(this, "group_by_dst_group");') %>
                            </td>
                          </tr>
                          <% if current_user.is_admin? %>
                            <tr>
                              <td align="right" nowrap><%= _('Manager') %>:</td>
                              <td align="center">
                                <%= check_box_tag('group_by_manager', '1', options[:group_by_manager].to_i == 1,
                                    class: 'input') %>
                              </td>
                              <td></td>
                              <td></td>
                            </tr>
                          <% end %>
                        </table>
                      </td>
                    </tr>
                  </table>
                </td>
              </tr>
              <tr>
                <td valign="top" style="padding: 0 0 5px 5px;">
                  <br/>
                  <%= submit_tag(_('Generate_Report'), data: { disable_with: _('Processing..') }) -%>
                </td>
              </tr>
            </table>
          </td>
          <% if searching && data[:table_rows].present? %>
              <td align="right" valign="bottom">
                <input type="button" value="<%= _('Export_to_csv') %>" id='csvExport' />
              </td>
          <% end %>
        </tr>
      </table>
  <% end %>
</div>


<script type="text/javascript">
  jQuery(document).ready(function ($) {
    $('#s_duration').on('keyup keydown', function(e){
      var key = e.keyCode;
      if (!((key == 8) || (key == 46) || (key >= 35 && key <= 40) || (key >= 48 && key <= 57) || (key >= 96 && key <= 105))) {
        e.preventDefault();
      }
    });
  });
</script>

<script type="text/javascript">
  $('date_from_minute').disabled = true;
  $('date_from_second').disabled = true;
  $('date_till_minute').disabled = true;
  $('date_till_second').disabled = true;
  var template_element = jQuery('#template');

  new Form.Element.EventObserver('s_originator', function(element, value) {
    new Ajax.Updater('op_device_list_span',
      '<%= Web_Dir %>/devices/ajax_get_user_devices',
      {
        evalScripts: true,
        onComplete: function(request){
          Element.hide('spinner');
          var select = $('s_op_device');
          if (select) {
            select.style = 'width: 146px;';
          }
        },
        onLoading: function(request){Element.show('spinner');},
        parameters: 'user_id=' + encodeURIComponent($('s_originator_id').value) + '&all=true&fax=false&type=op&field_id=s_op_device'
      }
    );
  });

  new Form.Element.EventObserver('s_terminator', function(element, value) {
    new Ajax.Updater('tp_device_list_span',
      '<%= Web_Dir %>/devices/ajax_get_user_devices',
      {
        evalScripts: true,
        onComplete: function(request){
          Element.hide('spinner');
          var select = $('s_tp_device');
          if (select) {
            select.style = 'width: 146px;';
          }
        },
        onLoading: function(request){Element.show('spinner');},
        parameters: 'user_id=' + encodeURIComponent($('s_terminator_id').value) + '&all=true&fax=false&type=tp&field_id=s_tp_device'
      }
    );
  });

  function compete(self, target) {
    if (self.checked) {
      document.getElementById(target).checked = false;
    }
  }


  function sendDataToAjax(name) {
     jQuery.ajax({
       type: "POST",
       url: "<%= Web_Dir %>/aggregate_templates/ajax_create_template",
       data: jQuery('form').serialize() + "&name=" + name,
       beforeSend: function (xhr) {
          // Security concerns
          xhr.setRequestHeader("X-CSRF-Token", jQuery("meta[name='csrf-token']").attr("content"));
        },
        success: function(data, status, xhrs) {
          showMessage("<%= _('Aggregate_Template_successfully_created' , '#5A8348') %>");
          ajaxUpdateTemplates();
        }
      });

   }


   // Update search form
   template_element.on('change', function () {
     var template_id = this.value;
     getDataFromAjax(template_id);
   });



   function getDataFromAjax (template_id) {
     jQuery.ajax({
       type: "POST",
       url: "<%= Web_Dir %>/aggregate_templates/ajax_get_template",
       data: {"id" : template_id},
       beforeSend: function (xhr) {
          // Security concerns
          xhr.setRequestHeader("X-CSRF-Token", jQuery("meta[name='csrf-token']").attr("content"));
        },
        success: function(data, status, xhrs) {
          updateAggregatesSearchForm(data.data);
        }
      });
   }

   function updateAggregatesSearchForm(data) {
      var text_inputs = <%= raw AggregateTemplate.text_inputs %>;
      var checkboxes = <%= raw AggregateTemplate.checkboxes %>;
      var radio_buttons = <%= raw AggregateTemplate.radio_buttons %>;

      // Update text inputs
      text_inputs.forEach(function(element) {
        jQuery('#' + element).val(data[element]);
      });

      // Update device list
      if (data['s_originator_id'] <= 0) {
        jQuery('#s_originator_id').val(-2);
      }

      if (data['s_terminator_id'] <= 0) {
        jQuery('#s_terminator_id').val(-2);
      }

      ajaxUpdateTPDevices(data['s_tp_device']);
      ajaxUpdateOPDevices(data['s_op_device']);

      // Update checkboxes
      checkboxes.forEach(function(element) {
        if (data[element] == 1) {
          jQuery('#' + element).attr("checked", true);
        } else {
          jQuery('#' + element).attr("checked", false);
        }
      });

      // Update radio buttons
      radio_buttons.forEach(function(element) {
        if (data[element] == 1) {
          jQuery('#' + element +'_0').attr("checked", false);
          jQuery('#' + element +'_1').attr("checked", true);
        } else {
          jQuery('#' + element +'_0').attr("checked", true);
          jQuery('#' + element +'_1').attr("checked", false);
        }
      });
   }

   function ajaxUpdateTPDevices(s_device_id) {
     new Ajax.Updater('tp_device_list_span',
      '<%= Web_Dir %>/devices/ajax_get_user_devices',
      {
        evalScripts: true,
        onComplete: function(request){
          Element.hide('spinner');
          var select = $('s_tp_device');
          if (select) {
            select.style = 'width: 146px;';
          }
        },
        onLoading: function(request){Element.show('spinner');},
        parameters: 'user_id=' + encodeURIComponent($('s_terminator_id').value) + '&all=true&fax=false&type=tp&field_id=s_tp_device&default=' + s_device_id
       }
      );
    }

    function ajaxUpdateOPDevices(s_device_id) {
      new Ajax.Updater('op_device_list_span',
        '<%= Web_Dir %>/devices/ajax_get_user_devices',
        {
          evalScripts: true,
          onComplete: function(request){
            Element.hide('spinner');
            var select = $('s_op_device');
            if (select) {
              select.style = 'width: 146px;';
            }
          },
          onLoading: function(request){Element.show('spinner');},
          parameters: 'user_id=' + encodeURIComponent($('s_originator_id').value) + '&all=true&fax=false&type=op&field_id=s_op_device&default=' + s_device_id
        }
      );
    }

    function createTemplate() {
      var name = jQuery('#template_name').val();
      showMessage('', '#5A8348');
      if (name){
          sendDataToAjax(name);
          jQuery('#template_name').val('');
      }else{
          showMessage("<%=_('Template_name_cannot_be_empty') %>", '#AF1A1A');
      }
    }

    function showMessage(message, color) {
        var message_container = jQuery(".request_notice");
        message_container.css('color', color);
        if (message_container.is(":hidden")) {
            message_container.show();
            message_container.text(message);
        } else {
            message_container.hide();
            message_container.text('');
        }
    }

    function ajaxUpdateTemplates(element, value) {
      new Ajax.Updater('template_list_span',
        '<%= Web_Dir %>/aggregates/ajax_get_templates_list',
        {
          evalScripts: true,
          onComplete: function(request){
            Element.hide('spinner');
            var select = $('template');
            if (select) {
              select.style = 'width:200px;';
              template_element = jQuery('#template');
            }
          },
          onLoading: function(request){Element.show('spinner');}
        }
      );
    }
</script>