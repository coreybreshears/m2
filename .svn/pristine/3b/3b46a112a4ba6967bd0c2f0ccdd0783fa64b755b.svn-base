# Tariff Import v2 Tariff Jobs
class TariffJobsController < ApplicationController
  layout :determine_layout

  before_filter :access_denied, if: -> { !admin? },
                except: [
                    :convert_all_assigned, :temp_import_all_converted, :all_analyze_import_by_tariff, :do_all
                ]
  before_filter :check_post_method, only: [:destroy]
  before_filter :find_tariff_job, only: [:destroy]

  def list
    @tariff_jobs = TariffJob.all
  end

  def destroy
    if @tariff_job.destroy
      flash[:status] = _('Tariff_Job_successfully_deleted')
    else
      flash_errors_for(_('Tariff_Job_was_not_deleted'), @tariff_job)
    end
    redirect_to(action: :list)
  end

  def convert_all_assigned
    TariffJob.convert_all_assigned
    render nothing: true, status: 200
  end

  def temp_import_all_converted
    TariffJob.temp_import_all_converted
    render nothing: true, status: 200
  end

  def all_analyze_import_by_tariff
    TariffJob.all_analyze_import_by_tariff
    render nothing: true, status: 200
  end

  def do_all
    TariffJob.convert_all_assigned
    TariffJob.temp_import_all_converted
    TariffJob.all_analyze_import_by_tariff
    render nothing: true, status: 200
  end

  private

  def find_tariff_job
    @tariff_job = TariffJob.where(id: params[:id]).first

    unless @tariff_job
      flash[:notice] = _('Tariff_Job_was_not_found')
      redirect_to(action: :list) && (return false)
    end
  end
end
