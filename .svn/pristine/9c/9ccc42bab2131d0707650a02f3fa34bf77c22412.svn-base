/*
 * Visual data functions for jqxGrid table
 */

function nice_billsec(billsec, time_format) {
    var nice_time;
    var hours, minutes, seconds;

    if (time_format == '%H:%M:%S') {
        hours = ~~(billsec / 3600);
        minutes = ~~((billsec % 3600) / 60);
        seconds = billsec % 60;

        hours = (hours < 10) ? ('0' + hours) : hours;

        nice_time = hours + ':' + ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2);
    } else {
        minutes = ~~(billsec / 60);
        seconds = billsec % 60;

        minutes = (minutes < 10) ? ('0' + minutes) : minutes;

        nice_time = minutes + ':' + ('0' + seconds).slice(-2);
    }

    return nice_time
}

function render_flag(flag_name, web_dir) {
    var flag_icon;

    if (flag_name && flag_name != '') {
        flag_icon = '&nbsp;<img alt="' + flag_name + '" src="' + web_dir + '/images/flags/' + flag_name + '.jpg" style="border-style:none" title="' + flag_name.toUpperCase() + '">';
    } else {
        flag_icon = '';
    }

    return flag_icon
}

function fix_column_width(jqxgrid_name) {
    var loss_making_calls_grid = jQuery("#" + jqxgrid_name);

    var grid_columns = jQuery.grep(loss_making_calls_grid.jqxGrid('columns').records, function(column) { return column.hidden == false });
    var used_width = 0, table_width = parseInt(document.getElementById("content" + jqxgrid_name).style.width);

    jQuery.each(
        grid_columns,
        function(index, column) {

            loss_making_calls_grid.jqxGrid('autoresizecolumn', column.datafield, 'all');
            used_width += column.width;
        }
    );

    var spare_width = 0, fixed_width = 0, fixed_width_last_column = 0;
    var column_count = grid_columns.length;
    if (used_width < table_width) {
        spare_width = table_width - used_width;
        fixed_width = parseInt(spare_width / column_count);
        fixed_width_last_column = spare_width % column_count;

        jQuery.each(
            grid_columns,
            function(index, column) {
                var set_width = column.width;

                if (index == (column_count - 1)) {
                    set_width += fixed_width + fixed_width_last_column;
                } else {
                    set_width += fixed_width;
                }

                loss_making_calls_grid.jqxGrid('setcolumnproperty', column.datafield, 'width', set_width);
            }
        );
    }
}

function nice_user_link(nice_user_and_id, web_dir) {
          var user_id_arr = nice_user_and_id.split(" ");
          var id = user_id_arr.pop();
          var nice_name = user_id_arr.join(" ");
          return '<a href="'+ web_dir + '/users/edit/' + id + '">' + nice_name + '</a></div>';
}

function session_sorting(jqxgrid_name, web_dir, session_column, session_direction, controller, action) {
    var jqxgrid = jQuery("#" + jqxgrid_name);

    var s_column = session_column;
    var s_direction = session_direction;
    if (s_column && s_column != '' && s_direction && s_direction != '') {
        jqxgrid.jqxGrid('sortby', s_column, s_direction);
    }

    jqxgrid.on('sort', function(event) {
        var sortInfo = event.args.sortinformation;
        var column = sortInfo.sortcolumn;
        var direction = sortInfo.sortdirection.ascending ? 'asc' : 'desc';

        jQuery.ajax({
            url: web_dir + '/application/jqxgrid_sort',
            type: 'POST',
            cache: false,
            dataType: 'html',
            data: {fcontroller: controller, faction: action, column: column, direction: direction, grid: jqxgrid_name},
            beforeSend: function (xhr) {
                xhr.setRequestHeader("X-CSRF-Token", jQuery("meta[name='csrf-token']").attr("content"));
            }
        });
    });
}